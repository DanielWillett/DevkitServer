<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnturnedUITools</name>
    </assembly>
    <members>
        <member name="T:DanielWillett.UITools.API.Extensions.ContainerUIExtension">
            <summary>
            Implements a fullscreen container base for a UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.Parent">
            <summary>
            The parent of the container. Usually <see cref="F:SDG.Unturned.EditorUI.window"/>, <see cref="F:SDG.Unturned.PlayerUI.window"/>, <see cref="F:SDG.Unturned.MenuUI.window"/>, or <see cref="F:SDG.Unturned.LoadingUI.window"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.SizeScaleX">
            <summary>
            Width of the container (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.SizeScaleY">
            <summary>
            Height of the container (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.PositionScaleX">
            <summary>
            X Position of the top left corner of the container from the left side of the screen (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.PositionScaleY">
            <summary>
            X Position of the top left corner of the container from the top of the screen (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.SizeOffsetX">
            <summary>
            How much bigger the container is outside of its bounds in the x direction (in pixels). Use negative values to shrink the container.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.SizeOffsetY">
            <summary>
            How much bigger the container is outside of its bounds in the y direction (in pixels). Use negative values to shrink the container.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.PositionOffsetX">
            <summary>
            How offset the container is from its bounds in the x direction (in pixels). Positive values move the container right, negative values move it left.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.PositionOffsetY">
            <summary>
            How offset the container is from its bounds in the y direction (in pixels). Positive values move the container down, negative values move it up.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.Container">
            <summary>
            Base container to add all elements to.
            </summary>
            <remarks>The value of this property may change over time.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.#ctor">
            <summary>
            Creates a new <see cref="T:DanielWillett.UITools.API.Extensions.ContainerUIExtension"/> and a new <see cref="T:SDG.Unturned.SleekFullscreenBox"/> without parenting it.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.OnShown">
            <summary>
            Add all your components in this method.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.OnHidden">
            <summary>
            Remove all your components in this method by calling <see cref="M:SDG.Unturned.SleekWrapper.RemoveChild(SDG.Unturned.ISleekElement)"/> on <see cref="P:DanielWillett.UITools.API.Extensions.ContainerUIExtension.Container"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.OnDestroyed">
            <summary>
            Unsubscribe from events, etc here. This is basically the <see cref="M:System.IDisposable.Dispose"/> method of your extension.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.Opened">
            <summary>
            Don't call this.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.Closed">
            <summary>
            Don't call this.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.ContainerUIExtension.Dispose">
            <summary>
            Don't call or implement this.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.IUIExtensionManager">
            <summary>
            Keeps track of UI extensions.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.IUIExtensionManager.Extensions">
            <summary>
            List of all registered UI Extensions (info, not instances themselves).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.IUIExtensionManager.DebugLogging">
            <summary>
            Enables extra debug logging to help diagnose problems.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.GetInstance``1">
            <summary>
            Gets the last created instance of <typeparamref name="T"/> (which should be a UI extension), or <see langword="null"/> if one isn't registered.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.GetInstance``1(System.Object)">
            <summary>
            Gets the last created instance of <typeparamref name="T"/> (which should be a UI extension) linked to the vanilla UI instance, or <see langword="null"/> if one isn't registered.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.RegisterExtension(System.Type,System.Type,SDG.Framework.Modules.Module)">
            <summary>
            Manually register a UI extension.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.RegisterFromModuleAssembly(System.Reflection.Assembly,SDG.Framework.Modules.Module)">
            <summary>
            Register all UI extensions in an assembly and module.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.Initialize">
            <summary>
            Run any start-up requirements. This should not include any extension searching, as those will be registered with <see cref="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.RegisterFromModuleAssembly(System.Reflection.Assembly,SDG.Framework.Modules.Module)"/> and <see cref="M:DanielWillett.UITools.API.Extensions.IUIExtensionManager.RegisterExtension(System.Type,System.Type,SDG.Framework.Modules.Module)"/>.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.IUIExtensionReadyListener">
            <summary>
            Contains a callback for as soon as the extension is ready to use.
            </summary>
            <remarks>This usually is only necessary if the extension is a unity object and will be called after Awake() but before Start(). For non Unity Objects, it's called right after the constructor.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUIExtensionReadyListener.OnReady(System.Object)">
            <summary>
            Called right after the extension is ready to use.
            </summary>
            <remarks>This usually is only necessary if the extension is a unity object and will be called after Awake() but before Start(). For non Unity Objects, it's called right after the constructor.</remarks>
            <param name="uiinstance">The instance of the vanilla UI linked to this object, if it isn't static.</param>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.IUnpatchableExtension">
            <summary>
            Any patches using harmony should implement this. Allows the last extension left when the manager is being disposed to unpatch any static patches.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.IUnpatchableExtension.Unpatch">
            <summary>
            Called on the last extension left when the manager is being disposed.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute">
             <summary>
             Mark a field, property, or method as an accessor for a field, property, or method in the parent type. The member can be static or instance.
             </summary>
             <remarks>For fields, the value is cached on initialization.
             For properties with setters (on default <see cref="P:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.InitializeMode"/>), the value is cached on initialization,
             for properties without setters, the getter is patched to get the value in realtime each time it's called.
             For methods, they will be patched to get the value in realtime each time they're called.
            
             <br/><br/>Usage of methods isn't really recommended for existing fields or properties, just because it's not very practical, but it does work.</remarks>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.MemberName">
            <summary>
            Name of the member.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.InitializeMode">
            <summary>
            Influences how values are cached, if at all.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.FailureBehavior">
            <summary>
            Influences how reflection failures are handled (member can't be found or is the wrong type).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.OwningType">
            <summary>
            Type that owns the member if it isn't the parent type you're extending or a base type of it.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.#ctor(System.String)">
            <summary>
            Defines an existing member by it's field, property, or method name.
            </summary>
            <param name="memberName">The name of the field, property, or method.</param>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberFailureBehavior">
            <summary>
            Describes the behavior of a member marked by the <see cref="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute"/> when it's unable to be found or doesn't match the expected type.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.Extensions.Members.ExistingMemberFailureBehavior.FailToLoad">
            <summary>
            Do not load the extension if the member can not be found or doesn't match the expected type.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.Extensions.Members.ExistingMemberFailureBehavior.Ignore">
            <summary>
            If the member can't be found or doesn't match the expected type, the value will not be initialized (will be default/null).
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberInitializeMode">
            <summary>
            Describes the behavior of a member marked by the <see cref="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute"/>.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.Extensions.Members.ExistingMemberInitializeMode.Default">
            <summary>
            Fields get initialized, properties with no setters get patched, properties with setters get initialized.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.Extensions.Members.ExistingMemberInitializeMode.InitializeOnConstruct">
            <summary>
            The field or property is set when the class is created.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.Extensions.Members.ExistingMemberInitializeMode.PatchGetter">
            <summary>
            The property's getter is patched to refetch the element each time.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo">
            <summary>
            Stores information about existing members (defined with <see cref="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute"/>) on an extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo.Member">
            <summary>
            Member to get or set in the extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo.Existing">
            <summary>
            Member to reference in the parent type.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo.ExistingIsStatic">
            <summary>
            If the member in the parent type is static.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo.IsInitialized">
            <summary>
            If the member is set when the extension is created, instead of patching the extension member to get the value in realtime (customized by setting <see cref="P:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute.InitializeMode"/>).
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo.EmitApply(System.Reflection.Emit.ILGenerator,System.Boolean)">
            <summary>
            Emits instructions to get the value (expects the vanilla UI instance is on the stack if it's not a static member) and set the value of the member in the extension.
            </summary>
            <param name="il">Instruction emitter for a dynamic method.</param>
            <param name="onlyRead">Only get the value instead of also setting it to the extension's member.</param>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo.EnumerateApply(System.Boolean)">
            <summary>
            Emits the <see cref="T:HarmonyLib.CodeInstruction"/>s to get the value (expects the vanilla UI instance is on the stack if it's not a static member) and set the value of the member in the extension.
            </summary>
            <param name="onlyRead">Only get the value instead of also setting it to the extension's member.</param>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtension">
            <summary>
            Optional base class for UI extensions (defined with <see cref="T:DanielWillett.UITools.API.Extensions.UIExtensionAttribute"/>). Provides OnOpened and OnClosed events, as well as overridable methods for the same events.
            Also provides an <see cref="P:DanielWillett.UITools.API.Extensions.UIExtension.Instance"/> property for accessing the vanilla UI instance (will be <see langword="null"/> for static UIs).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtension.Instance">
            <summary>
            The vanilla UI instance, or <see langword="null"/> when the vanilla UI is a static UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtension.Manager">
            <summary>
            The extension manager that created this extension.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.API.Extensions.UIExtension.OnOpened">
            <summary>
            Called when the vanilla UI is opened.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.API.Extensions.UIExtension.OnClosed">
            <summary>
            Called when the vanilla UI is closed.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.UIExtension.Opened">
            <summary>
            Called when the vanilla UI is opened, before <see cref="E:DanielWillett.UITools.API.Extensions.UIExtension.OnOpened"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.UIExtension.Closed">
            <summary>
            Called when the vanilla UI is closed, after <see cref="E:DanielWillett.UITools.API.Extensions.UIExtension.OnClosed"/>.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtension`1">
            <summary>
            Optional base class for UI extensions (defined with <see cref="T:DanielWillett.UITools.API.Extensions.UIExtensionAttribute"/>). Provides OnOpened and OnClosed events, as well as overridable methods for the same events.
            Also provides a typed <see cref="P:DanielWillett.UITools.API.Extensions.UIExtension`1.Instance"/> property for accessing the vanilla UI instance (will be <see langword="null"/> for static UIs).
            </summary>
            <typeparam name="T">The vanilla UI type.</typeparam>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtension`1.Instance">
            <summary>
            The vanilla UI instance, or <see langword="null"/> when the vanilla UI is a static UI.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtensionAttribute">
            <summary>
            Mark your extension to be auto-registered to <see cref="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager"/> when your plugin loads.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionAttribute.SearchedParentType">
            <summary>
            Type of the vanilla UI being extended as it was entered as a string.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionAttribute.ParentType">
            <summary>
            Type of the vanilla UI being extended.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionAttribute.SuppressUIExtensionParentWarning">
            <summary>
            Supress the warning for not deriving an extension from <see cref="T:DanielWillett.UITools.API.Extensions.UIExtension"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.UIExtensionAttribute.#ctor(System.Type)">
            <summary>
            Defines a new UI extension given the UI type to extend. This type should be present in <see cref="P:DanielWillett.UITools.Util.UIAccessor.TypeInfo"/>.
            </summary>
            <param name="parentType">The type of UI to extend. This type should be present in <see cref="P:DanielWillett.UITools.Util.UIAccessor.TypeInfo"/>.</param>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.UIExtensionAttribute.#ctor(System.String)">
            <summary>
            Add type by name, mainly for internal types.<br/>
            Use assembly qualified name if the type is not from SDG (Assembly-CSharp.dll).
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtensionInfo">
            <summary>
            Stores cached information about a UI extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.ImplementationType">
            <summary>
            Type of the extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.ParentType">
            <summary>
            Type of the vanilla parent UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.Priority">
            <summary>
            Priority of the extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.Assembly">
            <summary>
            Assembly the extension is from.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.Module">
            <summary>
            Module the extension is from.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.IsBaseType">
            <summary>
            If the extension derives from <see cref="T:DanielWillett.UITools.API.Extensions.UIExtension"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.Instantiations">
            <summary>
            All instantiations of the extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.Patches">
            <summary>
            All patches used by the extension's existing UI members.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.ExistingMembers">
            <summary>
            All existing UI members defined by the extension. These are defined using the <see cref="T:DanielWillett.UITools.API.Extensions.Members.ExistingMemberAttribute"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.SuppressUIExtensionParentWarning">
            <summary>
            If the warning for not deriving your class from the <see cref="T:DanielWillett.UITools.API.Extensions.UIExtension"/> class is supressed, which can be done using the <see cref="P:DanielWillett.UITools.API.Extensions.UIExtensionAttribute.SuppressUIExtensionParentWarning"/> property.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.TypeInfo">
            <summary>
            UI type info for the parent type of the UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.CreateCallback">
            <summary>
            Defined by <see cref="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager"/> as a method to create the extension. Don't recommend using this unless you're making your own implementation.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtensionInstanceInfo">
            <summary>
            Stores information about an extension instance.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInstanceInfo.Instance">
            <summary>
            A reference to the actual extension.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInstanceInfo.VanillaInstance">
            <summary>
            The vanilla type the instance is extending.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionInstanceInfo.Extension">
            <summary>
            The extension the instance belongs to.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo">
            <summary>
            Stores information about a parent type (vanilla UI type like <see cref="T:SDG.Unturned.MenuPlayServerInfoUI"/>).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.ParentType">
            <summary>
            Type of the parent UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.ParentTypeInfo">
            <summary>
            Information about the type of the parent UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.OpenPatches">
            <summary>
            All existing patches for open handlers.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.ClosePatches">
            <summary>
            All existing patches for close handlers.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.InitializePatches">
            <summary>
            All existing patches for initialize handlers.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.DestroyPatches">
            <summary>
            All existing patches for destroy handlers.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.Instances">
            <summary>
            All active extension instances.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo.VanillaInstances">
            <summary>
            All active parent type instances.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtensionPatch">
            <summary>
            Stores information about a UI handler patch (open, close, destroy, or initialize).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionPatch.Original">
            <summary>
            Original method that was patched.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionPatch.Patch">
            <summary>
            Method that was patched onto <see cref="P:DanielWillett.UITools.API.Extensions.UIExtensionPatch.Original"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionPatch.Type">
            <summary>
            Type of patch used.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.Extensions.UIExtensionVanillaInstanceInfo">
            <summary>
            Stores information about a vanilla UI type.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionVanillaInstanceInfo.Instance">
            <summary>
            The instance of the vanilla UI type, or <see langword="null"/> for static UIs.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionVanillaInstanceInfo.Static">
            <summary>
            If the vanilla UI type is a static UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.Extensions.UIExtensionVanillaInstanceInfo.IsOpen">
            <summary>
            Open state of the vanilla UI.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.Extensions.UIExtensionVanillaInstanceInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:DanielWillett.UITools.API.ICustomOnCloseUIHandler">
            <summary>
            UI Handler to trigger when the UI is closed.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.API.ICustomOnCloseUIHandler.OnClosed">
            <summary>
            Invoked when the UI is closed.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.ICustomOnCloseUIHandler.HasOnCloseBeenInitialized">
            <summary>
            Checks if <see cref="E:DanielWillett.UITools.API.ICustomOnCloseUIHandler.OnClosed"/> has been subscribed to.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.ICustomOnDestroyUIHandler">
            <summary>
            UI Handler to trigger when the UI is destroyed.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.API.ICustomOnDestroyUIHandler.OnDestroyed">
            <summary>
            Invoked when the UI is destroyed.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.ICustomOnDestroyUIHandler.HasOnDestroyBeenInitialized">
            <summary>
            Checks if <see cref="E:DanielWillett.UITools.API.ICustomOnDestroyUIHandler.OnDestroyed"/> has been subscribed to.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.ICustomOnInitializeUIHandler">
            <summary>
            UI Handler to trigger when the UI is initialized.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.API.ICustomOnInitializeUIHandler.OnInitialized">
            <summary>
            Invoked when the UI is initialized.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.ICustomOnInitializeUIHandler.HasOnInitializeBeenInitialized">
            <summary>
            Checks if <see cref="E:DanielWillett.UITools.API.ICustomOnInitializeUIHandler.OnInitialized"/> has been subscribed to.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.ICustomOnOpenUIHandler">
            <summary>
            UI Handler to trigger when the UI is opened.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.API.ICustomOnOpenUIHandler.OnOpened">
            <summary>
            Invoked when the UI is opened.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.ICustomOnOpenUIHandler.HasOnOpenBeenInitialized">
            <summary>
            Checks if <see cref="E:DanielWillett.UITools.API.ICustomOnOpenUIHandler.OnOpened"/> has been subscribed to.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.ICustomUIHandler">
            <summary>
            Adds custom patch handling for UI types.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.ICustomUIHandler.HasBeenInitialized">
            <summary>
            Checks if the handler has been patched.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.ICustomUIHandler.Patch(HarmonyLib.Harmony)">
            <summary>
            Patch any needed methods in the handler.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.ICustomUIHandler.Unpatch(HarmonyLib.Harmony)">
            <summary>
            Fully unpatch any patched methods in the handler.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.IUIExtension">
            <summary>
            Optional base interface for UI extensions (defined with <see cref="T:DanielWillett.UITools.API.Extensions.UIExtensionAttribute"/>). Provides OnOpened and OnClosed methods.
            </summary>
            <remarks>Consider using <see cref="T:DanielWillett.UITools.API.Extensions.UIExtension"/> instead if possible.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.API.IUIExtension.OnOpened">
            <summary>
            Called when the vanilla UI is opened, before <see cref="M:DanielWillett.UITools.API.IUIExtension.OnOpened"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.IUIExtension.OnClosed">
            <summary>
            Called when the vanilla UI is closed, after <see cref="M:DanielWillett.UITools.API.IUIExtension.OnClosed"/>.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.SleekChildEnumerator">
            <summary>
            Enumerates through the children of an <see cref="T:SDG.Unturned.ISleekElement"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekChildEnumerator.Parent">
            <summary>
            Owner of this enumerator.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekChildEnumerator.Index">
            <summary>
            Child index of the current element (or -1 if not started/reset).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekChildEnumerator.Current">
            <summary>
            The child of <see cref="P:DanielWillett.UITools.API.SleekChildEnumerator.Parent"/> at index <see cref="P:DanielWillett.UITools.API.SleekChildEnumerator.Index"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekChildEnumerator.#ctor(SDG.Unturned.ISleekElement)">
            <summary>
            Enumerate through the children of <paramref name="parent"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekChildEnumerator.Dispose">
            <summary>
            Does nothing.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekChildEnumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.API.SleekChildEnumerator.Reset">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.API.SleekChildEnumerator.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:DanielWillett.UITools.API.SleekPositionOffsetAnchor">
            <summary>
            Defines how <see cref="T:DanielWillett.UITools.Util.SleekElementBuilder`1"/> offsets elements.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.TopLeft">
            <summary>
            Positive values offset towards the top left of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.TopCenter">
            <summary>
            Positive values offset towards the top center of the parent's bounding box. Sets offset to zero when the element is centered in the X direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.TopRight">
            <summary>
            Positive values offset towards the top right of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.LeftCenter">
            <summary>
            Positive values offset towards the left center of the parent's bounding box. Sets offset to zero when the element is centered in the Y direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.Center">
            <summary>
            Positive values offset towards the center of the parent's bounding box. Sets offset to zero when the element is centered.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.Inwards">
            <summary>
            Positive values offset towards the center of the parent's bounding box. Sets offset to zero when the element is centered.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.RightCenter">
            <summary>
            Positive values offset towards the right center of the parent's bounding box. Sets offset to zero when the element is centered in the Y direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.BottomLeft">
            <summary>
            Positive values offset towards the bottom left of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.BottomCenter">
            <summary>
            Positive values offset towards the bottom center of the parent's bounding box. Sets offset to zero when the element is centered in the X direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.BottomRight">
            <summary>
            Positive values offset towards the bottom right of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.Outwards">
            <summary>
            Positive values offset away from center of the parent's bounding box. Sets offset to zero when the element is centered.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.TopOutwardsCenter">
            <summary>
            Positive values offset towards the top but away from the center of the parent's bounding box. Sets offset to zero when the element is centered in the X direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.LeftOutwardsCenter">
            <summary>
            Positive values offset towards the left but away from the center of the parent's bounding box. Sets offset to zero when the element is centered in the Y direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.RightOutwardsCenter">
            <summary>
            Positive values offset towards the right but away from the center of the parent's bounding box. Sets offset to zero when the element is centered in the Y direction.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionOffsetAnchor.BottomOutwardsCenter">
            <summary>
            Positive values offset towards the bottom but away from the center of the parent's bounding box. Sets offset to zero when the element is centered in the X direction.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.SleekPositionScaleAnchor">
            <summary>
            Defines how <see cref="T:DanielWillett.UITools.Util.SleekElementBuilder`1"/> positions elements.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.TopLeft">
            <summary>
            Top left of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.TopCenter">
            <summary>
            Top center of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.TopRight">
            <summary>
            Top right of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.LeftCenter">
            <summary>
            Center left of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.Center">
            <summary>
            Center of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.RightCenter">
            <summary>
            Center right of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.BottomLeft">
            <summary>
            Bottom left of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.BottomCenter">
            <summary>
            Bottom center of the parent's bounding box.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekPositionScaleAnchor.BottomRight">
            <summary>
            Bottom right of the parent's bounding box.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.SleekResizeAnchor">
            <summary>
            Defines how <see cref="T:DanielWillett.UITools.Util.SleekElementBuilder`1"/> resizes elements.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.TopLeft">
            <summary>
            Scale out from the top left of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.TopCenter">
            <summary>
            Scale out from the upper center of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.TopRight">
            <summary>
            Scale out from the top right of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.LeftCenter">
            <summary>
            Scale out from the left center of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.Center">
            <summary>
            Scale out from the center of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.RightCenter">
            <summary>
            Scale out from the right center of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.BottomLeft">
            <summary>
            Scale out from the bottom left of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.BottomCenter">
            <summary>
            Scale out from the lower center of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.BottomRight">
            <summary>
            Scale out from the bottom right of the object.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.SleekResizeAnchor.Auto">
            <summary>
            Scale from the corner closest to which corner the object's in within it's parent's bounding box.
            </summary>
            <remarks>This scales the object towards the center of its parent's bounding box.</remarks>
        </member>
        <member name="T:DanielWillett.UITools.API.SleekTransformPreset">
            <summary>
            Stores a size transform for a sleek element.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.SizeOffsetX">
            <summary>
            How much bigger the element is outside of its bounds in the x direction (in pixels). Use negative values to shrink the element.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.SizeOffsetY">
            <summary>
            How much bigger the element is outside of its bounds in the y direction (in pixels). Use negative values to shrink the element.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.SizeScaleX">
            <summary>
            Width of the element (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.SizeScaleY">
            <summary>
            Height of the element (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.PositionOffsetX">
            <summary>
            How offset the element is from its bounds in the x direction (in pixels). Positive values move the element right, negative values move it left.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.PositionOffsetY">
            <summary>
            How offset the element is from its bounds in the y direction (in pixels). Positive values move the element down, negative values move it up.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.PositionScaleX">
            <summary>
            X Position of the top left corner of the element from the left side of the screen (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.SleekTransformPreset.PositionScaleY">
            <summary>
            X Position of the top left corner of the element from the top of the screen (from 0-1, 0 being 0px and 1 being the size of the monitor or parent object).
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.#ctor(System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Create a <see cref="T:DanielWillett.UITools.API.SleekTransformPreset"/> from raw <see cref="T:System.Single"/> values.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.#ctor(SDG.Unturned.ISleekElement)">
            <summary>
            Create a <see cref="T:DanielWillett.UITools.API.SleekTransformPreset"/> from an <see cref="T:SDG.Unturned.ISleekElement"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.SizePixels(System.Single,System.Single)">
            <summary>
            Create a preset from a size in pixels.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.SizeScale(System.Single,System.Single)">
            <summary>
            Create a preset from a size in scale.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.Size(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a preset from a size.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.PositionPixels(System.Single,System.Single)">
            <summary>
            Create a preset from a position in pixels.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.PositionScale(System.Single,System.Single)">
            <summary>
            Create a preset from a position in scale.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.Position(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Create a preset from a position.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.SleekTransformPreset.Apply(SDG.Unturned.ISleekElement)">
            <summary>
            Apply this preset to an element.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.UIScene">
            <summary>
            Represents a category for vanilla UI tyeps.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.UIScene.Global">
            <summary>
            Other UI elements like sleek buttons, etc.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.UIScene.Loading">
            <summary>
            Child of <see cref="T:SDG.Unturned.LoadingUI"/>
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.UIScene.Menu">
            <summary>
            Child of <see cref="T:SDG.Unturned.MenuUI"/>
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.UIScene.Player">
            <summary>
            Child of <see cref="T:SDG.Unturned.PlayerUI"/>
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.UIScene.Editor">
            <summary>
            Child of <see cref="T:SDG.Unturned.EditorUI"/>
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.UITypeInfo">
            <summary>
            Contains information about a vanilla UI type.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.Type">
            <summary>
            Type of the UI.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.Parent">
            <summary>
            Type that 'owns' the UI, or <see langword="null"/> for root types (<see cref="T:SDG.Unturned.LoadingUI"/>, <see cref="T:SDG.Unturned.MenuUI"/>, <see cref="T:SDG.Unturned.PlayerUI"/>, and <see cref="T:SDG.Unturned.EditorUI"/>).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.IsStaticUI">
            <summary>
            If all the fields and methods (except maybe the constructor) for the UI is static.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.IsInstanceUI">
            <summary>
            If all the fields and methods (except maybe the constructor) for the UI are instance but there is only ever one instance.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.Scene">
            <summary>
            Category the UI is in.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.EmitProperty">
            <summary>
            Name of the property to get the UI in <see cref="T:DanielWillett.UITools.Util.UIAccessor"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.IsActiveMember">
            <summary>
            The member that returns a boolean for if the UI is active or not, or an object that can be null-checked.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CustomEmitter">
            <summary>
            A custom method used to emit the UI instance to a <see cref="T:System.Reflection.Emit.ILGenerator"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CustomTranspiler">
            <summary>
            A custom method used to emit the UI instance in a transpiler.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.OpenMethods">
            <summary>
            All methods that trigger the UI being opened.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CloseMethods">
            <summary>
            All methods that trigger the UI being closed.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.InitializeMethods">
            <summary>
            All methods that trigger the UI being initialized.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.DestroyMethods">
            <summary>
            All methods that trigger the UI being destroyed.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CustomOnOpen">
            <summary>
            Custom listener that triggers the UI being opened.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CustomOnClose">
            <summary>
            Custom listener that triggers the UI being closed.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CustomOnInitialize">
            <summary>
            Custom listener that triggers the UI being initialized.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CustomOnDestroy">
            <summary>
            Custom listener that triggers the UI being destroyed.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.DefaultOpenState">
            <summary>
            Default opened state when the UI is initialized.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.OpenOnInitialize">
            <summary>
            This UI only opens on initialize, open methods will not be looked for if this is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.CloseOnDestroy">
            <summary>
            This UI only closed on destroy, close methods will not be looked for if this is <see langword="true"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.DestroyOnClose">
            <summary>
            This UI always destroys on close, destroy methods will not be looked for if this is <see langword="true"/> and <see cref="P:DanielWillett.UITools.API.UITypeInfo.CloseOnDestroy"/> is <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UITypeInfo.DestroyWhenParentDestroys">
            <summary>
            This UI is destroyed when its parent is destroyed.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.API.UITypeInfo.#ctor(System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Boolean)">
            <summary>
            Create a new <see cref="T:DanielWillett.UITools.API.UITypeInfo"/> and prep the <see cref="P:DanielWillett.UITools.API.UITypeInfo.OpenMethods"/>, <see cref="P:DanielWillett.UITools.API.UITypeInfo.CloseMethods"/>, <see cref="P:DanielWillett.UITools.API.UITypeInfo.InitializeMethods"/>, and <see cref="P:DanielWillett.UITools.API.UITypeInfo.DestroyMethods"/> properties.
            </summary>
            <param name="typeName">UI type name, can be just the type name if its in SDG.Unturned, otherwise must be the full name.</param>
            <param name="closeMethods">Override list of close methods. By default it looks for all methods named (case-insensitive) 'close'.</param>
            <param name="openMethods">Override list of open methods. By default it looks for all methods named (case-insensitive) 'open'.</param>
            <param name="initializeMethods">Override list of initialize methods. By default it looks for all instance constructors.</param>
            <param name="destroyMethods">Override list of destroy methods. By default it looks for all methods named (case-insensitive) 'destroy' or 'OnDestroy'.</param>
            <param name="hasActiveMember">If the UI has an 'isActive' <see cref="T:System.Boolean"/> member, which stores the 'open' status. Looks for fields or properties named (case-insensitive) 'active' or 'isActive'.</param>
        </member>
        <member name="M:DanielWillett.UITools.API.UITypeInfo.#ctor(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Collections.Generic.IReadOnlyList{System.Reflection.MethodBase},System.Boolean)">
            <summary>
            Create a new <see cref="T:DanielWillett.UITools.API.UITypeInfo"/> and prep the <see cref="P:DanielWillett.UITools.API.UITypeInfo.OpenMethods"/>, <see cref="P:DanielWillett.UITools.API.UITypeInfo.CloseMethods"/>, <see cref="P:DanielWillett.UITools.API.UITypeInfo.InitializeMethods"/>, and <see cref="P:DanielWillett.UITools.API.UITypeInfo.DestroyMethods"/> properties.
            </summary>
            <param name="type">Parent UI type.</param>
            <param name="closeMethods">Override list of close methods. By default it looks for all methods named (case-insensitive) 'close'.</param>
            <param name="openMethods">Override list of open methods. By default it looks for all methods named (case-insensitive) 'open'.</param>
            <param name="initializeMethods">Override list of initialize methods. By default it looks for all instance constructors.</param>
            <param name="destroyMethods">Override list of destroy methods. By default it looks for all methods named (case-insensitive) 'destroy' or 'OnDestroy'.</param>
            <param name="hasActiveMember">If the UI has an 'isActive' <see cref="T:System.Boolean"/> member, which stores the 'open' status. Looks for fields or properties named (case-insensitive) 'active' or 'isActive'.</param>
        </member>
        <member name="T:DanielWillett.UITools.API.UIVisibilityMethodInfo">
            <summary>
            Stores information about a visibility method (open, close, initialize, or destroy).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UIVisibilityMethodInfo.Method">
            <summary>
            The actual method.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UIVisibilityMethodInfo.IsParameterized">
            <summary>
            If it has parameters.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.API.UIVisibilityMethodInfo.IsStatic">
            <summary>
            If it is static.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.API.VerticalTextAlignment">
            <summary>
            Represents the vertical component of <see cref="T:UnityEngine.TextAnchor"/>.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.VerticalTextAlignment.Top">
            <summary>
            Upper edge.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.VerticalTextAlignment.Center">
            <summary>
            Middle.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.API.VerticalTextAlignment.Bottom">
            <summary>
            Lower edge.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager">
            <summary>
            Default implementation of <see cref="T:DanielWillett.UITools.API.Extensions.IUIExtensionManager"/>, manages UI extensions.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Core.Extensions.UIExtensionManager.ExtensionsDictIntl">
            <summary>
            Stores all extensions in a mutable dictionary.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Core.Extensions.UIExtensionManager.ParentTypeInfoIntl">
            <summary>
            Stores all vanilla UI types in a mutable dictionary.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Core.Extensions.UIExtensionManager.Patches">
            <summary>
            Stores all extension patches in a mutable dictionary.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Core.Extensions.UIExtensionManager.PatchInfo">
            <summary>
            Stores all extension member patches in a mutable dictionary.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Core.Extensions.UIExtensionManager.OnRemoved">
            <summary>
            Invoked when an extension is destroyed.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Core.Extensions.UIExtensionManager.OnAdd">
            <summary>
            Invoked when an extension is initialzied.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.Extensions">
            <summary>
            List of all registered UI Extensions (info, not instances themselves).
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.DebugLogging">
            <inheritdoc />
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.ParentTypeInfo">
            <summary>
            Dictionary of all parent types. Parent types references the vanilla UI type backend. (i.e. <see cref="T:SDG.Unturned.PlayerDashboardCraftingUI"/>)
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.#ctor">
            <summary>
            Create a new default implementation of <see cref="T:DanielWillett.UITools.API.Extensions.IUIExtensionManager"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.Initialize">
            <summary>
            Run any start-up requirements. This should not include any extension searching, as those will be registered with <see cref="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.RegisterFromModuleAssembly(System.Reflection.Assembly,SDG.Framework.Modules.Module)"/> and <see cref="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.RegisterExtension(System.Type,System.Type,SDG.Framework.Modules.Module)"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.Dispose">
            <summary>
            Clean up any patches.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.DanielWillett#UITools#API#Extensions#IUIExtensionManager#Initialize">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.System#IDisposable#Dispose">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.GetInstance``1">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.GetInstance``1(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.LogDebug(System.String,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Logs a message in debug format.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.LogInfo(System.String,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Logs a message in info format.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.LogWarning(System.String,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Logs a message in warning format.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.LogError(System.String,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Logs a message in error format.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.RegisterFromModuleAssembly(System.Reflection.Assembly,SDG.Framework.Modules.Module)">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.OnOpened(System.Type,System.Object)">
            <summary>
            Called when a UI is detected to have opened.
            </summary>
            <param name="type">Type of the UI that was opened. Won't be <see langword="null"/> unless <paramref name="instance"/> has a value.</param>
            <param name="instance">Instance of a non-static UI that was opened. Won't be <see langword="null"/> unless <paramref name="type"/> has a value.</param>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.OnClosed(System.Type,System.Object)">
            <summary>
            Called when a UI is detected to have closed.
            </summary>
            <param name="type">Type of the UI that was opened. Won't be <see langword="null"/> unless <paramref name="instance"/> has a value.</param>
            <param name="instance">Instance of a non-static UI that was opened. Won't be <see langword="null"/> unless <paramref name="type"/> has a value.</param>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.OnInitialized(System.Type,System.Object)">
            <summary>
            Called when a UI is detected to have been initialized.
            </summary>
            <param name="type">Type of the UI that was opened. Won't be <see langword="null"/> unless <paramref name="instance"/> has a value.</param>
            <param name="instance">Instance of a non-static UI that was opened. Won't be <see langword="null"/> unless <paramref name="type"/> has a value.</param>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.OnDestroy(System.Type,System.Object)">
            <summary>
            Called when a UI is detected to have been destroyed.
            </summary>
            <param name="type">Type of the UI that was opened. Won't be <see langword="null"/> unless <paramref name="instance"/> has a value.</param>
            <param name="instance">Instance of a non-static UI that was opened. Won't be <see langword="null"/> unless <paramref name="type"/> has a value.</param>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.RegisterExtension(System.Type,System.Type,SDG.Framework.Modules.Module)">
            <inheritdoc />
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InitializeExtension(DanielWillett.UITools.API.Extensions.UIExtensionInfo)">
            <summary>
            Main initialize method for a <see cref="T:DanielWillett.UITools.API.Extensions.UIExtensionInfo"/> (representing an extension class).
            </summary>
            <remarks>Should call <see cref="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.TryInitializeMember(DanielWillett.UITools.API.Extensions.UIExtensionInfo,System.Reflection.MemberInfo)"/>, <see cref="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InitializeExtensionPatches(DanielWillett.UITools.API.Extensions.UIExtensionInfo)"/>, and <see cref="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InitializeParentPatches(DanielWillett.UITools.API.Extensions.UIExtensionInfo)"/>.</remarks>
            <exception cref="T:System.AggregateException">Something went wrong initializing the extension.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.AddInstance(System.Object,System.Object)">
            <summary>
            Register an extension instance in the list.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.CreateExtension(DanielWillett.UITools.API.Extensions.UIExtensionInfo,System.Object)">
            <summary>
            Create the extension object. Calls <see cref="P:DanielWillett.UITools.API.Extensions.UIExtensionInfo.CreateCallback"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.TryInitializeMember(DanielWillett.UITools.API.Extensions.UIExtensionInfo,System.Reflection.MemberInfo)">
            <summary>
            Initialize existing members in the extension.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InitializeExtensionPatches(DanielWillett.UITools.API.Extensions.UIExtensionInfo)">
            <summary>
            Initialize existing member patches in the extension.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.GetOrAddParentTypeInfo(System.Type,DanielWillett.UITools.API.UITypeInfo)">
            <summary>
            Get or add <see cref="T:DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo"/> for a UI type.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InitializeParentPatches(DanielWillett.UITools.API.Extensions.UIExtensionInfo)">
            <summary>
            Patch methods for the UI parent type.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.PatchParentOnOpen(DanielWillett.UITools.API.UITypeInfo,DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Patch OnOpen methods for the UI parent type.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.PatchParentOnClose(DanielWillett.UITools.API.UITypeInfo,DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Patch OnClose methods for the UI parent type.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.PatchParentOnInitialize(DanielWillett.UITools.API.UITypeInfo,DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Patch OnInitialize methods for the UI parent type.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.PatchParentOnDestroy(DanielWillett.UITools.API.UITypeInfo,DanielWillett.UITools.API.Extensions.UIExtensionParentTypeInfo,SDG.Framework.Modules.Module,System.Reflection.Assembly)">
            <summary>
            Patch OnDestroy methods for the UI parent type.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager.UIExtensionExistingMemberPatchInfo">
            <summary>
            Represents a patch for an existing member.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.UIExtensionExistingMemberPatchInfo.Extension">
            <summary>
            The extension this was patched for.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.UIExtensionExistingMemberPatchInfo.MemberInfo">
            <summary>
            The member that was patched.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.UIExtensionExistingMemberPatchInfo.Transpiler">
            <summary>
            The transpiler method that gets patched over the member.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Core.Extensions.UIExtensionManager.UIExtensionExistingMemberPatchInfo.#ctor(DanielWillett.UITools.API.Extensions.UIExtensionInfo,System.Reflection.MethodInfo,DanielWillett.UITools.API.Extensions.Members.UIExistingMemberInfo)">
            <summary>
            Create a new <see cref="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager.UIExtensionExistingMemberPatchInfo"/>.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InstanceCache`1">
            <summary>
            Caches an instance of a UI extension.
            </summary>
            <typeparam name="T">The type of the UI extension.</typeparam>
        </member>
        <member name="P:DanielWillett.UITools.Core.Extensions.UIExtensionManager.InstanceCache`1.Instance">
            <summary>
            UI Extension instance, or <see langword="null"/> if it can't be found.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager.CreateUIExtension">
            <summary>
            Represents a method to create a UI extension object.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.UnturnedUIToolsNexus">
            <summary>
            Module class for the <see cref="N:DanielWillett.UITools"/> module/library.
            </summary>
            <remarks>Call <see cref="M:DanielWillett.UITools.UnturnedUIToolsNexus.Initialize"/> to set up if not loaded as a module.</remarks>
        </member>
        <member name="P:DanielWillett.UITools.UnturnedUIToolsNexus.IsStandalone">
            <summary>
            Is <see cref="N:DanielWillett.UITools"/> installed as a module instead of a library?
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.UnturnedUIToolsNexus.UIExtensionManager">
            <summary>
            Manages extensions, the default type is <see cref="T:DanielWillett.UITools.Core.Extensions.UIExtensionManager"/>.
            </summary>
            <remarks>Call <see cref="M:DanielWillett.UITools.UnturnedUIToolsNexus.Initialize"/> to setup with default values.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.UnturnedUIToolsNexus.InitializeIfNotStandalone">
            <summary>
            Call this manually after all modules have loaded if using as a library (or you're unsure if it's used as a library). Safe to call if it's already been called.
            <para>
            Checks to see if <see cref="N:DanielWillett.UITools"/> is loaded as a module, otherwise runs <see cref="M:DanielWillett.UITools.UnturnedUIToolsNexus.Initialize"/>.
            </para>
            </summary>
            <remarks>If desired, <see cref="P:DanielWillett.UITools.UnturnedUIToolsNexus.UIExtensionManager"/> and <see cref="P:DanielWillett.UITools.Util.UIAccessor.HarmonyId"/> should be set beforehand.</remarks>
            <returns><see langword="True"/> if <see cref="N:DanielWillett.UITools"/> was not found as a module and <see cref="M:DanielWillett.UITools.UnturnedUIToolsNexus.Initialize"/> was ran, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:DanielWillett.UITools.UnturnedUIToolsNexus.Initialize">
            <summary>
            Call this manually after all modules have loaded if using as a library. Safe to call if it's already been called.
            </summary>
            <remarks>If desired, <see cref="P:DanielWillett.UITools.UnturnedUIToolsNexus.UIExtensionManager"/> and <see cref="P:DanielWillett.UITools.Util.UIAccessor.HarmonyId"/> should be set beforehand.</remarks>
        </member>
        <member name="T:DanielWillett.UITools.Util.GlazierExtensions">
            <summary>
            Extensions for <see cref="T:SDG.Unturned.IGlazier"/> implementations.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureBox(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekBox"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureButton(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekButton"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureFrame(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekElement"/> frame and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureConstraintFrame(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekConstraintFrame"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureImage(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekImage"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureSprite(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekSprite"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureLabel(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekLabel"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureScrollView(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekScrollView"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureSlider(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekSlider"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureStringField(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekField"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureToggle(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekToggle"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureUInt8Field(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekUInt8Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureUInt16Field(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekUInt16Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureUInt32Field(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekUInt32Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureInt32Field(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekInt32Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureFloat32Field(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekFloat32Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureFloat64Field(SDG.Unturned.IGlazier)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekFloat64Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureBox(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekBox}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekBox"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureButton(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekButton"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureFrame(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekElement}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekElement"/> frame and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureConstraintFrame(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekConstraintFrame}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekConstraintFrame"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureImage(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekImage"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureSprite(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekSprite"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureLabel(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekLabel}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekLabel"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureScrollView(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekScrollView"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureSlider(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekSlider"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureStringField(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekField"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureToggle(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekToggle"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureUInt8Field(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt8Field}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekUInt8Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureUInt16Field(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt16Field}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekUInt16Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureUInt32Field(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt32Field}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekUInt32Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureInt32Field(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekInt32Field}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekInt32Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureFloat32Field(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat32Field}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekFloat32Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureFloat64Field(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat64Field}@)">
            <summary>
            Create an <see cref="T:SDG.Unturned.ISleekFloat64Field"/> and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureWrapper``1(SDG.Unturned.IGlazier,DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Creates a new sleek type with the given <see cref="T:SDG.Unturned.IGlazier"/> instance and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.CreateWrapper``1(SDG.Unturned.IGlazier)">
            <summary>
            Creates a new sleek type with the given <see cref="T:SDG.Unturned.IGlazier"/> instance.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.ConfigureWrapper``1(SDG.Unturned.IGlazier,System.Func{``0},DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Creates a new sleek type with the given <see cref="T:SDG.Unturned.IGlazier"/> instance and a builder for it.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.GlazierExtensions.CreateWrapper``1(SDG.Unturned.IGlazier,System.Func{``0})">
            <summary>
            Creates a new sleek type with the given <see cref="T:SDG.Unturned.IGlazier"/> instance.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="T:DanielWillett.UITools.Util.SleekElementBuilder`1">
            <summary>
            Fluent API implementation for editing <see cref="T:SDG.Unturned.ISleekElement"/>.
            </summary>
            <remarks>There is no generic constraint on this because not all sleek interfaces inherit <see cref="T:SDG.Unturned.ISleekElement"/>.</remarks>
        </member>
        <member name="P:DanielWillett.UITools.Util.SleekElementBuilder`1.Element">
            <summary>
            The element currently being edited.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.SleekElementBuilder`1.SleekElement">
            <summary>
            The element currently being edited.
            </summary>
            <remarks>This allows you to access the element as a <see cref="T:SDG.Unturned.ISleekElement"/> since not all of the interfaces inherit <see cref="T:SDG.Unturned.ISleekElement"/>.</remarks>
        </member>
        <member name="T:DanielWillett.UITools.Util.SleekElementBuilderExtensions">
            <summary>
            Extensions for <see cref="T:DanielWillett.UITools.Util.SleekElementBuilder`1"/> to handle extended sleek element types.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Build``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Finalize the builder.
            </summary>
            <returns>The finished element.</returns>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.BuildAndParent``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,SDG.Unturned.ISleekElement)">
            <summary>
            Finalize the builder and add the element as a child of <paramref name="parent"/>.
            </summary>
            <remarks>The same as calling <see cref="M:SDG.Unturned.ISleekElement.AddChild(SDG.Unturned.ISleekElement)"/> on the parent after building.</remarks>
            <returns>The finished element.</returns>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Fill``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Fills the entire bounding area with the element.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithOrigin``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,SDG.Unturned.ISleekElement)">
            <summary>
            Copies all basic transforms from <see cref="T:SDG.Unturned.ISleekElement"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithPreset``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,DanielWillett.UITools.API.SleekTransformPreset@)">
            <summary>
            Copies all basic transforms from <see cref="T:SDG.Unturned.ISleekElement"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Anchor``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,DanielWillett.UITools.API.SleekPositionScaleAnchor)">
            <summary>
            Moves the element to the desired point on the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.TopLeft``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the top left corner of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.TopCenter``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the top center of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.TopRight``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the top right corner of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.BottomLeft``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the bottom left corner of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.BottomCenter``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the top left corner of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.BottomRight``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the top left corner of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.LeftCenter``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the left center of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Center``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the center of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RightCenter``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Moves the element to the right center of the screen and resets any offsets.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawOffsetPixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Sets the raw values of the element's position offset without any manipulation
            </summary>
            <remarks>In pixels.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawOffsetPixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Sets the raw values of the element's position offset without any manipulation
            </summary>
            <remarks>In pixels.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.AddRawPositionPixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Sets the raw values of the element's position offset without any manipulation
            </summary>
            <remarks>In pixels.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.AddRawPositionPixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Sets the raw values of the element's position offset without any manipulation
            </summary>
            <remarks>In pixels.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawSizePixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Sets the raw values of the element's size without any manipulation
            </summary>
            <remarks>In pixels.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawSizePixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Sets the raw values of the element's size without any manipulation
            </summary>
            <remarks>In pixels.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawPositionScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Sets the raw values of the element's position scale without any manipulation
            </summary>
            <remarks>Normalized value usually in [0, 1].</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawPositionScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Sets the raw values of the element's position scale without any manipulation
            </summary>
            <remarks>Normalized value usually in [0, 1].</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.AddRawPositionScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Sets the raw values of the element's position scale without any manipulation
            </summary>
            <remarks>Normalized value usually in [0, 1].</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.AddRawPositionScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Sets the raw values of the element's position scale without any manipulation
            </summary>
            <remarks>Normalized value usually in [0, 1].</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawSizeScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Sets the raw values of the element's position scale without any manipulation
            </summary>
            <remarks>Normalized value usually in [0, 1].</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRawSizeScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Sets the raw values of the element's position scale without any manipulation
            </summary>
            <remarks>Normalized value usually in [0, 1].</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithPositionPixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2,DanielWillett.UITools.API.SleekPositionOffsetAnchor)">
            <summary>
            Changes the absolute center position of the element. This is in pixels.
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="offsetTowards">Where to offset towards (relative to parent's bounding box).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithPositionPixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single,DanielWillett.UITools.API.SleekPositionOffsetAnchor)">
            <summary>
            Changes the absolute center position of the element. This is in pixels.
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="offsetTowards">Where to offset towards (relative to parent's bounding box).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithPositionScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2,DanielWillett.UITools.API.SleekPositionOffsetAnchor)">
            <summary>
            Changes the absolute center position of the element. This is a normalized value in [0, 1].
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="offsetTowards">Where to offset towards (relative to parent's bounding box).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithPositionScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single,DanielWillett.UITools.API.SleekPositionOffsetAnchor)">
            <summary>
            Changes the absolute center position of the element. This is a normalized value in [0, 1].
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="offsetTowards">Where to offset towards (relative to parent's bounding box).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithNormalizedPosition``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector2)">
            <summary>
            Changes the absolute position of the element. This is a normalized value in [-1, 1] following the default XY plane layout.
            </summary>
            <remarks>Default value: (-1f, 1f) (top left).</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithNormalizedPosition``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single)">
            <summary>
            Changes the absolute position of the element. This is a normalized value in [-1, 1] following the default XY plane layout.
            </summary>
            <remarks>Default value: (-1f, 1f) (top left).</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSizePixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector3,DanielWillett.UITools.API.SleekResizeAnchor)">
            <summary>
            Changes the absolute size of the element. This is in pixels.
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="anchor">Where to scale from (relative to the current scale anchor).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSizePixels``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single,DanielWillett.UITools.API.SleekResizeAnchor)">
            <summary>
            Changes the absolute size of the element. This is in pixels.
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="anchor">Where to scale from (relative to the current scale anchor).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSizeScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.Vector3,DanielWillett.UITools.API.SleekResizeAnchor)">
            <summary>
            Changes the normalized size of the element. This is usually in [0, 1].
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="anchor">Where to scale from (relative to the current scale anchor).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSizeScale``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single,System.Single,DanielWillett.UITools.API.SleekResizeAnchor)">
            <summary>
            Changes the normalized size of the element. This is usually in [0, 1].
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <param name="anchor">Where to scale from (relative to the current scale anchor).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Anchor was not a valid value.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.AddLabel``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.String,SDG.Unturned.ESleekSide,System.Action{SDG.Unturned.ISleekLabel})">
            <summary>
            Add a side label to the element.
            </summary>
            <param name="text">Text to display on the label.</param>
            <param name="side">Which side of the element to put the label on.</param>
            <param name="configureLabelAction">Optional configuration method.</param>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.AddLabel``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.String,UnityEngine.Color,SDG.Unturned.ESleekSide,System.Action{SDG.Unturned.ISleekLabel})">
            <summary>
            Add a side label to the element.
            </summary>
            <param name="text">Text to display on the label.</param>
            <param name="textColor">Color of the label's text.</param>
            <param name="side">Which side of the element to put the label on.</param>
            <param name="configureLabelAction">Optional configuration method.</param>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Configure``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Action{``0})">
            <summary>
            Further configure this element (without using the fluent API).
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Enable``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekElement.IsVisible"/> to <see langword="true"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (enabled).</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Hide``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekElement.IsVisible"/> to <see langword="false"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (enabled).</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsVisible``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekElement.IsVisible"/> to <paramref name="isVisible"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (enabled).</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithChildAutoLayoutPadding``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Single)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekElement.ChildAutoLayoutPadding"/> to <paramref name="childAutoLayoutPadding"/>.
            </summary>
            <remarks>Default value: 0.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekBox}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekBox"/>.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekButton"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.BACKGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Interactable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekButton.IsClickable"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekButton"/>.
            <para>Interactability defines if the user can interact with the button (click it).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.NotInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekButton.IsClickable"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekButton"/>.
            <para>Interactability defines if the user can interact with the button (click it).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekButton.IsClickable"/> to <paramref name="isClickable"/> on an <see cref="T:SDG.Unturned.ISleekButton"/>.
            <para>Interactability defines if the user can interact with the button (click it).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RaycastTarget(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekButton.IsRaycastTarget"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekButton"/>.
            <para>Should the button view consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RaycastIgnored(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekButton.IsRaycastTarget"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekButton"/>.
            <para>Should the button view consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>v
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsRaycastTarget(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekButton.IsRaycastTarget"/> to <paramref name="isRaycastTarget"/> on an <see cref="T:SDG.Unturned.ISleekButton"/>.
            <para>Should the button view consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenLeftClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,SDG.Unturned.ClickedButton)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekButton"/> is left clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenRightClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,SDG.Unturned.ClickedButton)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekButton"/> is right clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenAnyClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,SDG.Unturned.ClickedButton)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekButton"/> is left or right clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithConstraintMode(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekConstraintFrame}@,SDG.Unturned.ESleekConstraint)">
            <summary>
            Sets the constraint mode of an <see cref="T:SDG.Unturned.ISleekConstraintFrame"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekConstraint.NONE"/>.</remarks>
            <exception cref="T:System.InvalidOperationException">Constraint was set more than once.</exception>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithAspectRatio(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekConstraintFrame}@,System.Single)">
            <summary>
            Sets the aspect ratio of an <see cref="T:SDG.Unturned.ISleekConstraintFrame"/> in <see cref="F:SDG.Unturned.ESleekConstraint.FitInParent"/> constraint mode.
            </summary>
            <param name="aspectRatio">Aspect ratio to scale the content to. Calculated by dividing the width by the height.</param>
            <remarks>Default value: 1.0f.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.BACKGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.PasswordField(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsPasswordField"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (not password field).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.NotPasswordField(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsPasswordField"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (not password field).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsPasswordField(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsPasswordField"/> to <paramref name="isPasswordField"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (not password field).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Multiline(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsMultiline"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (singleline).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Singleline(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsMultiline"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (singleline).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsMultiline(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsMultiline"/> to <paramref name="isMultiline"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="false"/>. (singleline)</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithMaxLength(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,System.Int32)">
            <summary>
            Sets the max length in characters of an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <param name="maxLength">Maximum amount of characters in this field.</param>
            <remarks>Default value: 100.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithPlaceholder(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,System.String)">
            <summary>
            Sets the placeholder text of an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenTextSubmitted(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,SDG.Unturned.Entered)">
            <summary>
            Adds a callback for when text is submitted in an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenTextTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,SDG.Unturned.Typed)">
            <summary>
            Adds a callback for when the text in an <see cref="T:SDG.Unturned.ISleekField"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenFocusLeft(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,SDG.Unturned.Escaped)">
            <summary>
            Adds a callback for when the focus is lost for an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Interactable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsClickable"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.NotInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsClickable"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekField.IsClickable"/> to <paramref name="isInteractable"/> on an <see cref="T:SDG.Unturned.ISleekField"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueSubmitted(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat32Field}@,SDG.Unturned.TypedSingle)">
            <summary>
            Adds a callback for when a value is submitted in an <see cref="T:SDG.Unturned.ISleekFloat32Field"/>.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat32Field}@,SDG.Unturned.TypedSingle)">
            <summary>
            Adds a callback for when the value in an <see cref="T:SDG.Unturned.ISleekFloat32Field"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat32Field}@,System.Single)">
            <summary>
            Sets the initial value (text) of an <see cref="T:SDG.Unturned.ISleekFloat32Field"/>.
            </summary>
            <remarks>Default value: 0.0f.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat64Field}@,SDG.Unturned.TypedDouble)">
            <summary>
            Adds a callback for when the value in an <see cref="T:SDG.Unturned.ISleekFloat64Field"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekFloat64Field}@,System.Double)">
            <summary>
            Sets the initial value (text) of an <see cref="T:SDG.Unturned.ISleekFloat64Field"/>.
            </summary>
            <remarks>Default value: 0.0d.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,UnityEngine.Texture,System.Boolean)">
            <summary>
            Sets the texture of an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <param name="shouldDestroyTexture">Should <see cref="M:UnityEngine.Object.Destroy(UnityEngine.Object)" /> be called on the texture when the element is destroyed.</param>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <seealso cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,SDG.Unturned.Bundle,System.String,System.Boolean)"/>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,SDG.Unturned.Bundle,System.String,System.Boolean)">
            <summary>
            Loads the texture of an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <param name="shouldDestroyTexture">Should <see cref="M:UnityEngine.Object.Destroy(UnityEngine.Object)" /> be called on the texture when the element is destroyed.</param>
            <exception cref="T:System.ArgumentException">Unable to find a <see cref="T:UnityEngine.Texture2D"/> at <paramref name="path"/> in <paramref name="bundle"/>.</exception>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <seealso cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,UnityEngine.Texture,System.Boolean)"/>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,UnityEngine.Texture)">
            <summary>
            Sets the texture of an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <seealso cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,SDG.Unturned.Bundle,System.String)"/>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,SDG.Unturned.Bundle,System.String)">
            <summary>
            Loads the texture of an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Unable to find a <see cref="T:UnityEngine.Texture2D"/> at <paramref name="path"/> in <paramref name="bundle"/>.</exception>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <seealso cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,UnityEngine.Texture)"/>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithRotationAngle(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,System.Single)">
            <summary>
            Sets the rotation angle of an <see cref="T:SDG.Unturned.ISleekImage"/> and sets <see cref="P:SDG.Unturned.ISleekImage.CanRotate"/> to <see langword="true"/>.
            </summary>
            <param name="angleDeg">Angle to render the image at in degrees.</param>
            <remarks>Default value: 0.0f (can't rotate).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithNoRotation(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@)">
            <summary>
            Zeros the rotation angle of an <see cref="T:SDG.Unturned.ISleekImage"/> and sets <see cref="P:SDG.Unturned.ISleekImage.CanRotate"/> to <see langword="false"/>.
            </summary>
            <remarks>Default value: 0.0f (can't rotate).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTintColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the tint of an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.NONE"/> (<see cref="P:UnityEngine.Color.white"/>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.DestroyTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekImage.ShouldDestroyTexture"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (keep texture alive).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.KeepTextureAlive(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekImage.ShouldDestroyTexture"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (keep texture alive).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithShouldDestroyTexture(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekImage.ShouldDestroyTexture"/> to <paramref name="shouldDestroyTexture"/> on an <see cref="T:SDG.Unturned.ISleekImage"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (keep texture alive).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenLeftClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,System.Action)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekImage"/> is left clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenRightClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,System.Action)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekImage"/> is right clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenAnyClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekImage}@,System.Action)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekImage"/> is left or right clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekInt32Field}@,SDG.Unturned.TypedInt32)">
            <summary>
            Adds a callback for when the value in an <see cref="T:SDG.Unturned.ISleekInt32Field"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekInt32Field}@,System.Int32)">
            <summary>
            Sets the initial value (text) of an <see cref="T:SDG.Unturned.ISleekInt32Field"/>.
            </summary>
            <remarks>Default value: 0.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithText``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.String)">
            <summary>
            Sets the text of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithFontStyle``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.FontStyle)">
            <summary>
            Sets the font style of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:UnityEngine.FontStyle.Normal"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Bold``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Adds bolding to an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:UnityEngine.FontStyle.Normal"/>. If the font style is already <see cref="F:UnityEngine.FontStyle.Italic"/> it will be set to <see cref="F:UnityEngine.FontStyle.BoldAndItalic"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Italic``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Adds italics to an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:UnityEngine.FontStyle.Normal"/>. If the font style is already <see cref="F:UnityEngine.FontStyle.Bold"/> it will be set to <see cref="F:UnityEngine.FontStyle.BoldAndItalic"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.BoldAndItalic``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Adds bold and italics to an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:UnityEngine.FontStyle.Normal"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextAnchor``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.TextAnchor)">
            <summary>
            Sets the text anchor of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:UnityEngine.TextAnchor.MiddleCenter"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextAnchor``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.TextAlignment,DanielWillett.UITools.API.VerticalTextAlignment)">
            <summary>
            Sets the text anchor of an <see cref="T:SDG.Unturned.ISleekLabel"/> in separate components.
            </summary>
            <remarks>Default values: <see cref="F:UnityEngine.TextAlignment.Center"/>, <see cref="F:DanielWillett.UITools.API.VerticalTextAlignment.Center"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithHorizontalTextAlignment``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,UnityEngine.TextAlignment)">
            <summary>
            Sets the horizontal text alignment of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:UnityEngine.TextAlignment.Center"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithVerticalTextAlignment``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,DanielWillett.UITools.API.VerticalTextAlignment)">
            <summary>
            Sets the vertical text alignment of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:DanielWillett.UITools.API.VerticalTextAlignment.Center"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithFontSize``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,SDG.Unturned.ESleekFontSize)">
            <summary>
            Sets the font size preset of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekFontSize.Default"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithContrastContext``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,SDG.Unturned.ETextContrastContext)">
            <summary>
            Sets the contrast context of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ETextContrastContext.Default"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekLabel}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the text color of an <see cref="T:SDG.Unturned.ISleekLabel"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FONT"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekButton}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the text color of an <see cref="T:SDG.Unturned.ISleekButton"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FONT"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekBox}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the text color of an <see cref="T:SDG.Unturned.ISleekBox"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FONT"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekField}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the text color of an <see cref="T:SDG.Unturned.ISleekField"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FONT"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTextColor``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the text color of an <see cref="T:SDG.Unturned.ISleekNumericField"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FONT"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekNumericField"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.BACKGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Interactable``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekNumericField.IsClickable"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekNumericField"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.NotInteractable``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekNumericField.IsClickable"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekNumericField"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsInteractable``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekNumericField.IsClickable"/> to <paramref name="isInteractable"/> on an <see cref="T:SDG.Unturned.ISleekNumericField"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.ScaleContentToWidth(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToWidth"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should <see cref="P:SDG.Unturned.ISleekScrollView.ContentScaleFactor" /> be applied in the x direction?</para>
            </summary>
            <remarks>Default value: <see langword="false"/> (don't scale content).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.DoNotScaleContentToWidth(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToWidth"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should <see cref="P:SDG.Unturned.ISleekScrollView.ContentScaleFactor" /> be applied in the x direction?</para>
            </summary>
            <remarks>Default value: <see langword="false"/> (don't scale content).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithShouldScaleContentToWidth(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToWidth"/> to <paramref name="shouldScaleContentToWidth"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should <see cref="P:SDG.Unturned.ISleekScrollView.ContentScaleFactor" /> be applied in the x direction?</para>
            </summary>
            <remarks>Default value: <see langword="false"/> (don't scale content).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.ScaleContentToHeight(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToHeight"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should <see cref="P:SDG.Unturned.ISleekScrollView.ContentScaleFactor" /> be applied in the y direction?</para>
            </summary>
            <remarks>Default value: <see langword="false"/> (don't scale content).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.DoNotScaleContentToHeight(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToHeight"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should <see cref="P:SDG.Unturned.ISleekScrollView.ContentScaleFactor" /> be applied in the y direction?</para>
            </summary>
            <remarks>Default value: <see langword="false"/> (don't scale content).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithShouldScaleContentToHeight(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToHeight"/> to <paramref name="verticalScrollbarVisibility"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should <see cref="P:SDG.Unturned.ISleekScrollView.ContentScaleFactor" /> be applied in the y direction?</para>
            </summary>
            <remarks>Default value: <see langword="false"/> (don't scale content).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialScaleFactor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Single)">
            <summary>
            Sets the initial scale factor of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>How zoomed in the content is.</para>
            </summary>
            <remarks>Default value: 0.0f.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.ReduceWidthWhenScrollbarVisible(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ReduceWidthWhenScrollbarVisible"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>The scrollbar being hidden will slightly increase the width of the scroll view.</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (reduce width).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.KeepWidthWhenScrollbarVisible(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ReduceWidthWhenScrollbarVisible"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>The scrollbar being hidden will not change the width of the scroll view.</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (reduce width).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithScrollbarVisibleWidthBehavior(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ReduceWidthWhenScrollbarVisible"/> to <paramref name="reduceWidthWhenScrollbarVisible"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>The scrollbar being hidden can slightly increase the width of the scroll view.</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (reduce width).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithVerticalScrollbar(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToHeight"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekScrollbarVisibility.Default"/> (vertical scrollbar visible).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithoutVerticalScrollbar(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ScaleContentToHeight"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekScrollbarVisibility.Default"/> (vertical scrollbar visible).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithVerticalScrollbarVisibility(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,SDG.Unturned.ESleekScrollbarVisibility)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.VerticalScrollbarVisibility"/> to <paramref name="verticalScrollbarVisibility"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekScrollbarVisibility.Default"/> (vertical scrollbar visible).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithContentSizeOffset(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Single,System.Single)">
            <summary>
            Sets the content size offset of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Coordintes: (size X, size Y).</para>
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithContentSizeOffset(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,UnityEngine.Vector2)">
            <summary>
            Sets the content size offset of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Coordintes: (size X, size Y).</para>
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialScrollOffset(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Single,System.Single)">
            <summary>
            Sets the normalized (0-1) center/offset of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Coordintes: (Left to right, top to bottom).</para>
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialScrollOffset(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,UnityEngine.Vector2)">
            <summary>
            Sets the normalized (0-1) center/offset of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Coordintes: (Left to right, top to bottom).</para>
            </summary>
            <remarks>Default value: (0.0f, 0.0f).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.HandleScrolling(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.HandleScrollWheel"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (handle scrolling).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.DoNotHandleScrolling(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.HandleScrollWheel"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (handle scrolling).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.ShouldHandleScrolling(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.HandleScrollWheel"/> to <paramref name="handleScrolling"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (handle scrolling).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.BACKGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithForegroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the foreground color of an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FOREGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithManualLayout(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ContentUseManualLayout"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (manual layout).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithAutomaticLayout(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ContentUseManualLayout"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (manual layout).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithShouldUseManualLayout(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.ContentUseManualLayout"/> to <paramref name="useManualLayout"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="true"/> (manual layout).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBottomAlignedContent(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.AlignContentToBottom"/> to <see langword="true"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (top aligned).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTopAlignedContent(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.AlignContentToBottom"/> to <see langword="false"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (top aligned).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithShouldAlignContentToBottom(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.AlignContentToBottom"/> to <paramref name="alignContentToBottom"/> for an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (top aligned).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RaycastTarget(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.IsRaycastTarget"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should the scroll view consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RaycastIgnored(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.IsRaycastTarget"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should the scroll view consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsRaycastTarget(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.IsRaycastTarget"/> to <paramref name="isRaycastTarget"/> on an <see cref="T:SDG.Unturned.ISleekScrollView"/>.
            <para>Should the scroll view consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.StartAtTop(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.NormalizedVerticalPosition"/> to 0.0f.
            </summary>
            <remarks>Default value: 0.0f (start at top).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.StartAtBottom(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekScrollView.NormalizedVerticalPosition"/> to 1.0f.
            </summary>
            <remarks>Default value: 0.0f (start at top).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenScrollOffsetChanged(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekScrollView}@,System.Action{UnityEngine.Vector2})">
            <summary>
            Adds a callback for when the normalized (0-1) center/offset in an <see cref="T:SDG.Unturned.ISleekScrollView"/> is changed.
            <para>Top to bottom or left to right depending on orientation.</para>
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialProgress(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@,System.Single)">
            <summary>
            Sets the normalized (0-1) scroll progress of an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            <para>Top to bottom or left to right depending on orientation.</para>
            </summary>
            <remarks>Default value: 0.0f.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithVerticalOrientation(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@)">
            <summary>
            Sets the orientation of an <see cref="T:SDG.Unturned.ISleekSlider"/> to <see cref="F:SDG.Unturned.ESleekOrientation.VERTICAL"/>.
            <para>Is the slider vertical or horizontal?</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekOrientation.VERTICAL"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithHorizontalOrientation(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@)">
            <summary>
            Sets the orientation of an <see cref="T:SDG.Unturned.ISleekSlider"/> to <see cref="F:SDG.Unturned.ESleekOrientation.HORIZONTAL"/>.
            <para>Is the slider vertical or horizontal?</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekOrientation.VERTICAL"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithOrientation(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@,SDG.Unturned.ESleekOrientation)">
            <summary>
            Sets the orientation of an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            <para>Is the slider vertical or horizontal?</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekOrientation.VERTICAL"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Interactable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekSlider.IsInteractable"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.NotInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekSlider.IsInteractable"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekSlider.IsInteractable"/> to <paramref name="isInteractable"/> on an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            <para>Interactability defines if the user can interact with the slider (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.BACKGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithForegroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the foreground color of an <see cref="T:SDG.Unturned.ISleekSlider"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FOREGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenProgressChanged(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSlider}@,SDG.Unturned.Dragged)">
            <summary>
            Adds a callback for when the scroll progress in an <see cref="T:SDG.Unturned.ISleekSlider"/> is changed.
            <para>Top to bottom or left to right depending on orientation.</para>
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSprite(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,UnityEngine.Sprite)">
            <summary>
            Sets the sprite of an <see cref="T:SDG.Unturned.ISleekSprite"/>.
            </summary>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <seealso cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSprite(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,SDG.Unturned.Bundle,System.String)"/>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSprite(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,SDG.Unturned.Bundle,System.String)">
            <summary>
            Loads the sprite of an <see cref="T:SDG.Unturned.ISleekSprite"/>.
            </summary>
            <exception cref="T:System.ArgumentException">Unable to find a <see cref="T:UnityEngine.Sprite"/> at <paramref name="path"/> in <paramref name="bundle"/>.</exception>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <seealso cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSprite(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,UnityEngine.Sprite)"/>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTintColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the tint of an <see cref="T:SDG.Unturned.ISleekSprite"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.NONE"/> (<see cref="P:UnityEngine.Color.white"/>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenLeftClicked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,System.Action)">
            <summary>
            Adds a callback for when an <see cref="T:SDG.Unturned.ISleekSprite"/> is left clicked.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RaycastTarget(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekSprite.IsRaycastTarget"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekSprite"/>.
            <para>Should the sprite consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.RaycastIgnored(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekSprite.IsRaycastTarget"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekSprite"/>.
            <para>Should the sprite consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsRaycastTarget(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekSprite.IsRaycastTarget"/> to <paramref name="isRaycastTarget"/> on an <see cref="T:SDG.Unturned.ISleekSprite"/>.
            <para>Should the sprite consume clicks?</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (raycast target).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSlicedDrawMethod(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@)">
            <summary>
            Sets the draw method of an <see cref="T:SDG.Unturned.ISleekSprite"/> to <see cref="F:SDG.Unturned.ESleekSpriteType.Sliced"/>.
            <para>Edges of a sprite are separated from the center, defined in Unity's sprite editor.</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekSpriteType.Tiled"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithSingularDrawMethod(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@)">
            <summary>
            Sets the draw method of an <see cref="T:SDG.Unturned.ISleekSprite"/> to <see cref="F:SDG.Unturned.ESleekSpriteType.Regular"/>.
            <para>Only draws one image with no manipulation.</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekSpriteType.Tiled"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTiledDrawMethod(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,UnityEngine.Vector2Int)">
            <summary>
            Sets the draw method of an <see cref="T:SDG.Unturned.ISleekSprite"/> to <see cref="F:SDG.Unturned.ESleekSpriteType.Tiled"/>.
            <para>Images are repeated in the positive X and Y directions (or in all directions in some implementations).</para>
            </summary>
            <param name="tilingDimensions">Number of images to tile in each direction. Used for the UIToolkit <see cref="T:SDG.Unturned.Glazier"/> set.</param>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekSpriteType.Tiled"/> (you still should pass tiling dimensions if you want more than a 1x1).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithDrawMethod(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,SDG.Unturned.ESleekSpriteType)">
            <summary>
            Sets the draw method of an <see cref="T:SDG.Unturned.ISleekSprite"/> to <see cref="F:SDG.Unturned.ESleekSpriteType.Regular"/>.
            <para>Defines how sprites are drawn. Use <see cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTiledDrawMethod(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,UnityEngine.Vector2Int)"/> to set the mode to <see cref="F:SDG.Unturned.ESleekSpriteType.Tiled"/> (this method throws an exception in that case).</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekSpriteType.Tiled"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
            <exception cref="T:System.ArgumentException">Use <see cref="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTiledDrawMethod(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekSprite}@,UnityEngine.Vector2Int)"/> to set tiling mode.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.InitiallyChecked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@)">
            <summary>
            Sets the checked state of an <see cref="T:SDG.Unturned.ISleekToggle"/> to checked.
            </summary>
            <remarks>Default value: <see langword="false"/> (not checked).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.InitiallyUnchecked(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@)">
            <summary>
            Sets the checked state of an <see cref="T:SDG.Unturned.ISleekToggle"/> to unchecked.
            </summary>
            <remarks>Default value: <see langword="false"/> (not checked).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialState(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@,System.Boolean)">
            <summary>
            Sets the checked state of an <see cref="T:SDG.Unturned.ISleekToggle"/>.
            </summary>
            <remarks>Default value: <see langword="false"/> (not checked).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.Interactable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekToggle.IsInteractable"/> to <see langword="true"/> on an <see cref="T:SDG.Unturned.ISleekToggle"/>.
            <para>Interactability defines if the user can interact with the check box (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.NotInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekToggle.IsInteractable"/> to <see langword="false"/> on an <see cref="T:SDG.Unturned.ISleekToggle"/>.
            <para>Interactability defines if the user can interact with the check box (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithIsInteractable(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@,System.Boolean)">
            <summary>
            Sets <see cref="P:SDG.Unturned.ISleekToggle.IsInteractable"/> to <paramref name="isInteractable"/> on an <see cref="T:SDG.Unturned.ISleekToggle"/>.
            <para>Interactability defines if the user can interact with the check box (change it's value).</para>
            </summary>
            <remarks>Default value: <see langword="true"/> (interactable).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithBackgroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the background color of an <see cref="T:SDG.Unturned.ISleekToggle"/>.
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.BACKGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithForegroundColor(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@,SDG.Unturned.SleekColor)">
            <summary>
            Sets the foreground color of an <see cref="T:SDG.Unturned.ISleekToggle"/>.
            <para>The foreground color is the check mark.</para>
            </summary>
            <remarks>Default value: <see cref="F:SDG.Unturned.ESleekTint.FOREGROUND"/> (from settings, default value <c>RGB01(0.9, 0.9, 0.9)</c>).</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenStateChanged(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekToggle}@,SDG.Unturned.Toggled)">
            <summary>
            Adds a callback for when the checked state of an <see cref="T:SDG.Unturned.ISleekToggle"/> is changed.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt16Field}@,SDG.Unturned.TypedUInt16)">
            <summary>
            Adds a callback for when the value in an <see cref="T:SDG.Unturned.ISleekUInt16Field"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt16Field}@,System.UInt16)">
            <summary>
            Sets the initial value (text) of an <see cref="T:SDG.Unturned.ISleekUInt16Field"/>.
            </summary>
            <remarks>Default value: 0.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithMinimumValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt16Field}@,System.UInt16)">
            <summary>
            Sets the minimum value of an <see cref="T:SDG.Unturned.ISleekUInt16Field"/>.
            </summary>
            <remarks>Default value: 0.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithMaximumValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt16Field}@,System.UInt16)">
            <summary>
            Sets the maximum value of an <see cref="T:SDG.Unturned.ISleekUInt16Field"/>.
            </summary>
            <remarks>Default value: 65535.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt32Field}@,SDG.Unturned.TypedUInt32)">
            <summary>
            Adds a callback for when the value in an <see cref="T:SDG.Unturned.ISleekUInt32Field"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt32Field}@,System.UInt32)">
            <summary>
            Sets the initial value (text) of an <see cref="T:SDG.Unturned.ISleekUInt32Field"/>.
            </summary>
            <remarks>Default value: 0.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WhenValueTyped(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt8Field}@,SDG.Unturned.TypedByte)">
            <summary>
            Adds a callback for when the value in an <see cref="T:SDG.Unturned.ISleekUInt8Field"/> is modified.
            </summary>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithInitialValue(DanielWillett.UITools.Util.SleekElementBuilder{SDG.Unturned.ISleekUInt8Field}@,System.Byte)">
            <summary>
            Sets the initial value (text) of an <see cref="T:SDG.Unturned.ISleekUInt8Field"/>.
            </summary>
            <remarks>Default value: 0.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekElementBuilderExtensions.WithTooltip``1(DanielWillett.UITools.Util.SleekElementBuilder{``0}@,System.String)">
            <summary>
            Sets the tooltip text of an <see cref="T:SDG.Unturned.ISleekWithTooltip"/>.
            <para>Text that will show when hovering over the element.</para>
            </summary>
            <remarks>Default value: <see langword="null"/>.</remarks>
            <exception cref="T:System.NotImplementedException">Not implemented in the current <see cref="T:SDG.Unturned.Glazier"/> type.</exception>
        </member>
        <member name="T:DanielWillett.UITools.Util.SleekExtensions">
            <summary>
            Extensions for <see cref="T:SDG.Unturned.ISleekElement"/> and <see cref="T:DanielWillett.UITools.Util.SleekElementBuilder`1"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekExtensions.Configure``1(``0)">
            <summary>
            Create a <see cref="T:DanielWillett.UITools.Util.SleekElementBuilder`1"/> for the given element.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekExtensions.AsEnumerable(SDG.Unturned.ISleekElement)">
            <summary>
            Enumerate through the children of <paramref name="element"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekExtensions.GetEnumerator(SDG.Unturned.ISleekElement)">
            <summary>
            Enumerate through the children of <paramref name="element"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">Not on main thread.</exception>
        </member>
        <member name="M:DanielWillett.UITools.Util.SleekExtensions.SetIsClickable(SDG.Unturned.ISleekElement,System.Boolean)">
            <summary>
            Sets the 'IsClickable' or 'IsInteractable' values for one of the following types: <see cref="T:SDG.Unturned.ISleekButton"/>, <see cref="T:SDG.Unturned.ISleekSlider"/>,
            <see cref="T:SDG.Unturned.ISleekToggle"/>, <see cref="T:SDG.Unturned.ISleekField"/>, <see cref="T:SDG.Unturned.ISleekNumericField"/>,
            <see cref="T:SDG.Unturned.SleekButtonIcon"/>, <see cref="T:SDG.Unturned.SleekButtonIconConfirm"/>, <see cref="T:SDG.Unturned.SleekButtonState"/>.
            </summary>
            <param name="isClickable">Can the user interact with the element (change it's value or click it)?</param>
            <returns><see langword="true"/> unless the input is not a valid type.</returns>
        </member>
        <member name="T:DanielWillett.UITools.Util.SleekTransformPresets">
            <summary>
            Common sleek presets found in-game.
            </summary>
        </member>
        <member name="F:DanielWillett.UITools.Util.SleekTransformPresets.SmallButton">
            <summary>
            Shorter buttons found in various places.
            </summary>
            <remarks>200x30 pixels.</remarks>
        </member>
        <member name="F:DanielWillett.UITools.Util.SleekTransformPresets.LargeButton">
            <summary>
            Slightly taller buttons common in the menu.
            </summary>
            <remarks>200x50 pixels.</remarks>
        </member>
        <member name="F:DanielWillett.UITools.Util.SleekTransformPresets.FullScreen">
            <summary>
            Fills the entire screen.
            </summary>
            <remarks>1x1 size scale.</remarks>
        </member>
        <member name="F:DanielWillett.UITools.Util.SleekTransformPresets.FullScreenWithInset">
            <summary>
            Fills the entire screen with a 10px border. Common in a lot of dashboard menus.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.Util.UIAccessor">
            <summary>
            Reflection tools for working with vanilla UIs.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.HarmonyId">
            <summary>
            Set the ID to use for the <see cref="T:HarmonyLib.Harmony"/> instance used by the module.
            </summary>
            <remarks>Must be set in <see cref="M:SDG.Framework.Modules.IModuleNexus.initialize"/>.</remarks>
            <exception cref="T:System.InvalidOperationException">Patcher is already set up.</exception>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.HarmonyLogPath">
            <summary>
            Set the path of the harmony debug log. Defaults to <c>Unturned/Logs/harmony.log</c>. Enable it with <see cref="P:DanielWillett.UITools.Util.UIAccessor.ManageHarmonyDebugLog"/>.
            </summary>
            <remarks>Must be set in <see cref="M:SDG.Framework.Modules.IModuleNexus.initialize"/>.</remarks>
            <exception cref="T:System.InvalidOperationException">Patcher is already set up.</exception>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ManageHarmonyDebugLog">
            <summary>
            Enable managing the harmony debug log? Set the path with <see cref="P:DanielWillett.UITools.Util.UIAccessor.HarmonyLogPath"/>.
            </summary>
            <remarks>Must be set in <see cref="M:SDG.Framework.Modules.IModuleNexus.initialize"/>.</remarks>
            <exception cref="T:System.InvalidOperationException">Patcher is already set up.</exception>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.LoadingUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.LoadingUI"/>.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.Util.UIAccessor.EditorUIReady">
            <summary>
            Called when the <see cref="T:SDG.Unturned.EditorUI"/> is initialized.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.Util.UIAccessor.PlayerUIReady">
            <summary>
            Called when the <see cref="T:SDG.Unturned.PlayerUI"/> is initialized.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorDashboardUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorDashboardUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorEnvironmentUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorEnvironmentUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorEnvironmentNodesUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.EditorEnvironmentNodesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorEnvironmentNodesUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorEnvironmentNodesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorTerrainUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainHeightUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.EditorTerrainHeightUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainHeightUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorTerrainHeightUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainMaterialsUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.EditorTerrainMaterialsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainMaterialsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorTerrainMaterialsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainDetailsUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.EditorTerrainDetailsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainDetailsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorTerrainDetailsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainTilesUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.EditorTerrainTilesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorTerrainTilesUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorTerrainTilesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorLevelUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorLevelUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorLevelObjectsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorLevelObjectsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorVolumesUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.EditorVolumesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.EditorVolumesUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.EditorVolumesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerBrowserRequestUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.PlayerBrowserRequestUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerBrowserRequestUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerBrowserRequestUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerBarricadeStereoUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerBarricadeMannequinUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerBarricadeMannequinUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerBarricadeMannequinUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerGroupUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.PlayerGroupUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerGroupUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerGroupUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerDashboardUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerDashboardUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerPauseUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerPauseUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerLifeUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerLifeUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.PlayerDashboardInformationUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.PlayerDashboardInformationUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuDashboardUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuDashboardUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPauseUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPauseUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuCreditsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuCreditsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuTitleUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuTitleUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuConfigurationUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuConfigurationUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuConfigurationAudioUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuConfigurationAudioUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayConnectUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayConnectUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServersUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayServersUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayOnlineSafetyUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayOnlineSafetyUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServerListFiltersUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayServerListFiltersUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServerBookmarksUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayServerBookmarksUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServerCurationUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayServerCurationUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServerCurationRulesUIType">
            <summary>
            Type of <see cref="T:SDG.Unturned.MenuPlayServerCurationRulesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServerCurationRulesUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayServerCurationUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayServerInfoUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayServerInfoUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlaySingleplayerUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlaySingleplayerUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuPlayLobbiesUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuPlayLobbiesUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuServerPasswordUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuServerPasswordUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsCharacterUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsCharacterUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsAppearanceUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsAppearanceUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsGroupUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsGroupUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsClothingUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsClothingUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsClothingItemUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsClothingItemUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsClothingInspectUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsClothingInspectUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsClothingDeleteUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsClothingDeleteUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuSurvivorsClothingBoxUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuSurvivorsClothingBoxUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreMenuType">
            <summary>
            Type of <see cref="T:SDG.Unturned.ItemStoreCartMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreMenu">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.ItemStoreMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreCartMenuType">
            <summary>
            Type of <see cref="T:SDG.Unturned.ItemStoreCartMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreDetailsMenuType">
            <summary>
            Type of <see cref="T:SDG.Unturned.ItemStoreDetailsMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreBundleContentsMenuType">
            <summary>
            Type of <see cref="T:SDG.Unturned.ItemStoreBundleContentsMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreCartMenu">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.ItemStoreCartMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreDetailsMenu">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.ItemStoreDetailsMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.ItemStoreBundleContentsMenu">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.ItemStoreBundleContentsMenu"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopSubmitUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopSubmitUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopEditorUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopEditorUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopErrorUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopErrorUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopLocalizationUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopLocalizationUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopSpawnsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopSpawnsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.MenuWorkshopSubscriptionsUI">
            <summary>
            Singleton instance of <see cref="T:SDG.Unturned.MenuWorkshopSubscriptionsUI"/>.
            </summary>
        </member>
        <member name="P:DanielWillett.UITools.Util.UIAccessor.TypeInfo">
            <summary>
            Dictionary of vanilla UI types to their type info.
            </summary>
        </member>
        <member name="E:DanielWillett.UITools.Util.UIAccessor.OnInitializingUIInfo">
            <summary>
            Called on initialization to allow modules to add their UI types to the <see cref="P:DanielWillett.UITools.Util.UIAccessor.TypeInfo"/> dictionary before it's finalized (allowing them to be extended).<br/>
            This needs to be subscribed to on plugin load for it to be called.
            </summary>
            <remarks>While removing or replacing info is possible, it's not recommended as it may mess with features of other modules.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.GetTypeInfo(System.Type)">
            <summary>
            Get information about a vanilla UI type, or <see langword="null"/> if there's no information registered.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.TryGetVolumeMenuType``1(System.Type@)">
            <summary>Gets the menu type from its parent <see cref="T:SDG.Unturned.VolumeBase"/>.</summary>
            <remarks>Includes parent types.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.TryGetNodeMenuType``1(System.Type@)">
            <summary>Gets the menu type from its parent <see cref="T:SDG.Unturned.TempNodeBase"/>.</summary>
            <remarks>Includes parent types.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.TryGetMenuType(System.Type,System.Type@)">
            <summary>Gets the menu type from its parent component. This currently only applies to <see cref="T:SDG.Unturned.VolumeBase"/>'s and <see cref="T:SDG.Unturned.TempNodeBase"/>'s.</summary>
            <remarks>Includes parent types.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.TryGetUITypeInfo``1(DanielWillett.UITools.API.UITypeInfo@)">
            <remarks>Includes parent types.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.TryGetUITypeInfo(System.Type,DanielWillett.UITools.API.UITypeInfo@)">
            <remarks>Includes parent types.</remarks>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.LoadUIToILGenerator(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            Read a UI type to an <see cref="T:System.Reflection.Emit.ILGenerator"/>.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.EnumerateUIInstructions(System.Type,System.Reflection.Emit.ILGenerator)">
            <summary>
            Enumerate the <see cref="T:HarmonyLib.CodeInstruction"/>s to load a UI type.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.UIAccessor.Init">
            <summary>
            Initialize <see cref="P:DanielWillett.UITools.Util.UIAccessor.TypeInfo"/> if it hasn't already been initialized. Calls <see cref="E:DanielWillett.UITools.Util.UIAccessor.OnInitializingUIInfo"/>.
            </summary>
        </member>
        <member name="T:DanielWillett.UITools.Util.InitializingUIInfo">
            <summary>
            Handler for <see cref="E:DanielWillett.UITools.Util.UIAccessor.OnInitializingUIInfo"/>,
            </summary>
            <param name="typeInfo">Mutable dictionary of UI types.</param>
        </member>
        <member name="T:DanielWillett.UITools.Util.UITools">
            <summary>
            Random utilities for working with Glazier elements.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.UITools.CopyTransformFrom(SDG.Unturned.ISleekElement,SDG.Unturned.ISleekElement)">
            <summary>
            Copies all the basic transform values from one <see cref="T:SDG.Unturned.ISleekElement"/> to another.
            </summary>
        </member>
        <member name="M:DanielWillett.UITools.Util.UITools.TryRemoveChild(SDG.Unturned.ISleekElement,SDG.Unturned.ISleekElement)">
            <summary>
            Attempt to remove <paramref name="child"/> from <paramref name="parent"/> if it's a child.
            </summary>
            <returns><see langword="false"/> if either <paramref name="child"/> or <paramref name="parent"/> is <see langword="null"/> or <paramref name="child"/> is not a child of <paramref name="parent"/> or <paramref name="parent"/> has been destroyed, otherwise <see langword="true"/>.</returns>
        </member>
        <member name="T:DanielWillett.UITools.Util.UnturnedReflectionToolsLogger">
            <summary>
            Thread-safe logger for Unturned implementing <see cref="T:DanielWillett.ReflectionTools.IReflectionToolsLogger"/>.
            </summary>
        </member>
    </members>
</doc>
